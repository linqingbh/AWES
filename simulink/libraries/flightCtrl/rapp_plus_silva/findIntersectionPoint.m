function [sCls,pG,sInt,tPt,eta] = findIntersectionPoint(aBooth,bBooth,...
    meanElevation,s0,kiteLoc,kiteVel,L1)

% normalize (because Rapp does it)
kiteLoc = kiteLoc./norm(kiteLoc);
kiteVel = kiteVel./norm(kiteVel);
% local functions for first and second derivatives of dot(xK,xPath)
eqxKdXP_1stDir = @(aBooth,bBooth,meanElevation,pathParam,thrLength,xK,yK,zK)-thrLength.*cos(meanElevation-(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*conj(zK).*((aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2)./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)-(aBooth.^2.*1.0./bBooth.^2.*sin(pathParam).^2)./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)+aBooth.^4.*1.0./bBooth.^4.*cos(pathParam).^2.*sin(pathParam).^2.*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^2.*2.0)+thrLength.*sin(meanElevation-(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*conj(xK).*cos((aBooth.*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*((aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2)./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)-(aBooth.^2.*1.0./bBooth.^2.*sin(pathParam).^2)./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)+aBooth.^4.*1.0./bBooth.^4.*cos(pathParam).^2.*sin(pathParam).^2.*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^2.*2.0)-thrLength.*sin(meanElevation-(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*conj(yK).*sin((aBooth.*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*((aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2)./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)-(aBooth.^2.*1.0./bBooth.^2.*sin(pathParam).^2)./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)+aBooth.^4.*1.0./bBooth.^4.*cos(pathParam).^2.*sin(pathParam).^2.*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^2.*2.0)-thrLength.*cos(meanElevation-(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*cos((aBooth.*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*conj(yK).*((aBooth.*cos(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)+aBooth.^3.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam).^2.*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^2.*2.0)-thrLength.*cos(meanElevation-(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*conj(xK).*sin((aBooth.*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*((aBooth.*cos(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)+aBooth.^3.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam).^2.*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^2.*2.0);
eqxKdXP_2ndDir = @(aBooth,bBooth,meanElevation,pathParam,thrLength,xK,yK,zK)-thrLength.*sin(meanElevation-(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*conj(zK).*((aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2)./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)-(aBooth.^2.*1.0./bBooth.^2.*sin(pathParam).^2)./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)+aBooth.^4.*1.0./bBooth.^4.*cos(pathParam).^2.*sin(pathParam).^2.*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^2.*2.0).^2-thrLength.*cos(meanElevation-(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*conj(zK).*(aBooth.^6.*1.0./bBooth.^6.*cos(pathParam).^3.*sin(pathParam).^3.*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^3.*8.0-(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam).*4.0)./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)-aBooth.^4.*1.0./bBooth.^4.*cos(pathParam).*sin(pathParam).^3.*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^2.*6.0+aBooth.^4.*1.0./bBooth.^4.*cos(pathParam).^3.*sin(pathParam).*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^2.*6.0)+thrLength.*cos(meanElevation-(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*conj(xK).*sin((aBooth.*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*((aBooth.*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)+aBooth.^3.*1.0./bBooth.^2.*sin(pathParam).^3.*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^2.*2.0-aBooth.^5.*1.0./bBooth.^4.*cos(pathParam).^2.*sin(pathParam).^3.*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^3.*8.0-aBooth.^3.*1.0./bBooth.^2.*cos(pathParam).^2.*sin(pathParam).*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^2.*6.0)+thrLength.*cos(meanElevation-(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*conj(yK).*sin((aBooth.*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*((aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2)./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)-(aBooth.^2.*1.0./bBooth.^2.*sin(pathParam).^2)./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)+aBooth.^4.*1.0./bBooth.^4.*cos(pathParam).^2.*sin(pathParam).^2.*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^2.*2.0).^2-thrLength.*cos(meanElevation-(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*conj(xK).*cos((aBooth.*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*((aBooth.*cos(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)+aBooth.^3.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam).^2.*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^2.*2.0).^2+thrLength.*cos(meanElevation-(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*conj(yK).*sin((aBooth.*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*((aBooth.*cos(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)+aBooth.^3.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam).^2.*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^2.*2.0).^2+thrLength.*sin(meanElevation-(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*conj(xK).*cos((aBooth.*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*(aBooth.^6.*1.0./bBooth.^6.*cos(pathParam).^3.*sin(pathParam).^3.*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^3.*8.0-(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam).*4.0)./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)-aBooth.^4.*1.0./bBooth.^4.*cos(pathParam).*sin(pathParam).^3.*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^2.*6.0+aBooth.^4.*1.0./bBooth.^4.*cos(pathParam).^3.*sin(pathParam).*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^2.*6.0)-thrLength.*sin(meanElevation-(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*conj(yK).*sin((aBooth.*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*(aBooth.^6.*1.0./bBooth.^6.*cos(pathParam).^3.*sin(pathParam).^3.*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^3.*8.0-(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam).*4.0)./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)-aBooth.^4.*1.0./bBooth.^4.*cos(pathParam).*sin(pathParam).^3.*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^2.*6.0+aBooth.^4.*1.0./bBooth.^4.*cos(pathParam).^3.*sin(pathParam).*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^2.*6.0)+thrLength.*cos(meanElevation-(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*cos((aBooth.*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*conj(yK).*((aBooth.*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)+aBooth.^3.*1.0./bBooth.^2.*sin(pathParam).^3.*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^2.*2.0-aBooth.^5.*1.0./bBooth.^4.*cos(pathParam).^2.*sin(pathParam).^3.*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^3.*8.0-aBooth.^3.*1.0./bBooth.^2.*cos(pathParam).^2.*sin(pathParam).*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^2.*6.0)-thrLength.*cos(meanElevation-(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*conj(xK).*cos((aBooth.*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*((aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2)./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)-(aBooth.^2.*1.0./bBooth.^2.*sin(pathParam).^2)./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)+aBooth.^4.*1.0./bBooth.^4.*cos(pathParam).^2.*sin(pathParam).^2.*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^2.*2.0).^2-thrLength.*sin(meanElevation-(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*cos((aBooth.*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*conj(yK).*((aBooth.*cos(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)+aBooth.^3.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam).^2.*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^2.*2.0).*((aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2)./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)-(aBooth.^2.*1.0./bBooth.^2.*sin(pathParam).^2)./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)+aBooth.^4.*1.0./bBooth.^4.*cos(pathParam).^2.*sin(pathParam).^2.*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^2.*2.0).*2.0-thrLength.*sin(meanElevation-(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*conj(xK).*sin((aBooth.*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*((aBooth.*cos(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)+aBooth.^3.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam).^2.*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^2.*2.0).*((aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2)./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)-(aBooth.^2.*1.0./bBooth.^2.*sin(pathParam).^2)./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)+aBooth.^4.*1.0./bBooth.^4.*cos(pathParam).^2.*sin(pathParam).^2.*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^2.*2.0).*2.0;
pathEq = @(aBooth,bBooth,meanElevation,pathParam,thrLength)[thrLength.*cos(meanElevation-(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*cos((aBooth.*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0));-thrLength.*cos(meanElevation-(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*sin((aBooth.*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0));thrLength.*sin(meanElevation-(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0))];
tanVec = @(aBooth,bBooth,meanElevation,pathParam,thrLength)[thrLength.*sin(meanElevation-(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*cos((aBooth.*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*((aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2)./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)-(aBooth.^2.*1.0./bBooth.^2.*sin(pathParam).^2)./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)+aBooth.^4.*1.0./bBooth.^4.*cos(pathParam).^2.*sin(pathParam).^2.*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^2.*2.0)-thrLength.*cos(meanElevation-(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*sin((aBooth.*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*((aBooth.*cos(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)+aBooth.^3.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam).^2.*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^2.*2.0);-thrLength.*sin(meanElevation-(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*sin((aBooth.*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*((aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2)./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)-(aBooth.^2.*1.0./bBooth.^2.*sin(pathParam).^2)./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)+aBooth.^4.*1.0./bBooth.^4.*cos(pathParam).^2.*sin(pathParam).^2.*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^2.*2.0)-thrLength.*cos(meanElevation-(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*cos((aBooth.*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*((aBooth.*cos(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)+aBooth.^3.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam).^2.*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^2.*2.0);-thrLength.*cos(meanElevation-(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).*sin(pathParam))./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)).*((aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2)./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)-(aBooth.^2.*1.0./bBooth.^2.*sin(pathParam).^2)./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0)+aBooth.^4.*1.0./bBooth.^4.*cos(pathParam).^2.*sin(pathParam).^2.*1.0./(aBooth.^2.*1.0./bBooth.^2.*cos(pathParam).^2+1.0).^2.*2.0)];

% local variables
maxCount = 100;
% preallocate
sPrev = s0;
sNext = inf;

for counter = 1:maxCount
    
    NewtFirstDir = eqxKdXP_1stDir(aBooth,bBooth,meanElevation,sPrev,...
        1,kiteLoc(1),kiteLoc(2),kiteLoc(3));
    
    NewtSecondDir = eqxKdXP_2ndDir(aBooth,bBooth,meanElevation,sPrev,...
        1,kiteLoc(1),kiteLoc(2),kiteLoc(3));
    
    sNext = max(sPrev - NewtFirstDir/NewtSecondDir,sPrev);
    
    % break out of for loop if difference is low
    if (sNext-sPrev)/(2*pi) < 1e-3
        break;
    end
    % update sPrve
    sPrev = sNext;

end

% close point path variable
sCls = sNext;
pG = pathEq(aBooth,bBooth,meanElevation,sCls,1);

% find target point
lb = 0;
ub = 0.5*pi;

% target point path variable
dsStar = goldenSection(@(ds) ...
    calcTargetDistance(aBooth,bBooth,meanElevation,sNext,L1,ds),...
    lb,ub,1e-4);
sInt = sNext + dsStar;
% target point inertial coordinates
tPt = pathEq(aBooth,bBooth,meanElevation,sInt,1);
% angle between kite velocity and target point
eta = max(acos(dot(tPt,kiteVel)),eps);
% sign of angle
tG = tanVec(aBooth,bBooth,meanElevation,sCls,1);
sigma = -sign(dot(cross(tG,pG),kiteLoc-pG));
% 
eta = sigma*eta;

end